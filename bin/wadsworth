#!/usr/bin/env node

/* eslint no-console: 0 */
const http = require('http');
const fs = require('fs');
const mri = require('mri');
const serve = require('../');

const helpText = `Usage: serve-script [file] [options]

file     JS file to serve (default stdin)

Options:
   -p, --port     Port to listen on  [8000]
   --no-console   Disable console.log redirection`;

const opts = mri(process.argv.slice(2), {
  boolean: ['console'],
  alias: { port: 'p' },
  default: { console: true, port: 8080 },
});

// eslint-disable-next-line prefer-destructuring
opts.file = opts._[0];
opts['no-console'] = !opts.console;

if (opts.file == null) {
  console.log(helpText);
  process.exit();
}

function getSource(callback) {
  if (!opts.file) {
    let src = '';
    process.stdin.resume();
    process.stdin.on('data', data => {
      src += data.toString();
    });
    process.stdin.on('close', () => {
      callback(src);
    });
  } else {
    callback(cb => {
      cb(null, fs.createReadStream(opts.file));
    });
  }
}

getSource(src => {
  const handler = serve({
    noConsole: opts['no-console'],
    src,
  });

  http.createServer(handler).listen(opts.port, err => {
    if (err) {
      throw err;
    }

    console.log(`Listening on port ${opts.port}`);
  });
});
